	
  
  
   //粘贴到Service接口类
 	/**
	 * 创建 机票票号
	 * @param id
	 * @return deleted count 
	 */
	public Ticketnumber createTicketnumber(Ticketnumber ticketnumber) throws SQLException;
	
	/**
	 * 删除 机票票号
	 * @param id
	 * @return deleted count 
	 */
	public int deleteTicketnumber(long id);
	
	
	/**
	 * 修改 机票票号
	 * @param id
	 * @return updated count 
	 */
	public int updateTicketnumber(Ticketnumber ticketnumber);

		
	/**
	 * 修改 机票票号但忽略空值 
	 * @param id
	 * @return 
	 */
	public int updateTicketnumberIgnoreNull(Ticketnumber ticketnumber);
		
	
	/**
	 * 查找 机票票号
	 * @param where
	 * @param orderby
	 * @param limit
	 * @param offset
	 * @return
	 */
	public List findAllTicketnumber(String where, String orderby,int limit,int offset);
		
	
	/**
	 * 查找 机票票号
	 * @param id
	 * @return
	 */
	public Ticketnumber findTicketnumber(long id);
	
	
	/** 
	 * 查找 机票票号
	 * @param where
	 * @param orderby
	 * @param pageinfo
	 * @return
	 */
	public List findAllTicketnumberForPageinfo(String where, String orderby,PageInfo pageinfo);
		
	/** 
	 * 根据Sql查找机票票号
	 * @param sql
	 * @param limit
	 * @param offset
	 * @return
	 */
	public List findAllTicketnumberBySql(String sql,int limit,int offset);
	
	
	/**
	 * 执行Sql 机票票号
	 * @param sql 
	 * @return updated count 
	 */
	public int excuteTicketnumberBySql(String sql);
	
	/**
	 * 执行Sql 
	 * @param sql 
	 * @return  count 
	 */
	public int countTicketnumberBySql(String sql);
	
	
	//------------------------------------------------------------------------
	//粘贴到Service实现类
	
	private ITicketnumberComponent ticketnumberComponent;
	  
 	
 	public ITicketnumberComponent getTicketnumberComponent() {
		return ticketnumberComponent;
	}
	public void setTicketnumberComponent(ITicketnumberComponent  ticketnumberComponent) {
		this.ticketnumberComponent = ticketnumberComponent;
	}
	/**
	 * 创建 机票票号
	 * @param id
	 * @return deleted count 
	 */
	public Ticketnumber createTicketnumber(Ticketnumber ticketnumber) throws SQLException{
	
		return ticketnumberComponent.createTicketnumber(ticketnumber);
	}
	/**
	 * 删除 机票票号
	 * @param id
	 * @return deleted count 
	 */
	public int deleteTicketnumber(long id){
	
		return ticketnumberComponent.deleteTicketnumber(id);
	}
	
	
	/**
	 * 修改 机票票号
	 * @param id
	 * @return updated count 
	 */
	public int updateTicketnumber(Ticketnumber ticketnumber){
		return ticketnumberComponent.updateTicketnumber(ticketnumber);
	
	}

		
	/**
	 * 修改 机票票号但忽略空值 
	 * @param id
	 * @return 
	 */
	public int updateTicketnumberIgnoreNull(Ticketnumber ticketnumber){
			return ticketnumberComponent.updateTicketnumberIgnoreNull(ticketnumber);
	
	}
	
	/**
	 * 查找 机票票号
	 * @param where
	 * @param orderby
	 * @param limit
	 * @param offset
	 * @return
	 */
	public List findAllTicketnumber(String where, String orderby,int limit,int offset){
		return ticketnumberComponent.findAllTicketnumber(where, orderby,limit,offset);
	}
		
	
	/**
	 * 查找 机票票号
	 * @param id
	 * @return
	 */
	public Ticketnumber findTicketnumber(long id){
		return ticketnumberComponent.findTicketnumber(id);
	}
	
	/** 
	 * 查找 机票票号
	 * @param where
	 * @param orderby
	 * @param pageinfo
	 * @return
	 */
	public List findAllTicketnumberForPageinfo(String where, String orderby,PageInfo pageinfo){
		return ticketnumberComponent.findAllTicketnumber(where, orderby,pageinfo);
	}
		
	/** 
	 * 根据Sql查找机票票号
	 * @param sql
	 * @param limit
	 * @param offset
	 * @return
	 */
	public List findAllTicketnumberBySql(String sql,int limit,int offset){
		return ticketnumberComponent.findAllTicketnumber(sql,limit,offset);
	}
	
	
	/**
	 * 执行Sql 机票票号
	 * @param sql 
	 * @return updated count 
	 */
	public int excuteTicketnumberBySql(String sql){
		return ticketnumberComponent.excuteTicketnumberBySql(sql);
	}
	
	/**
	 * 执行Sql 
	 * @param sql 
	 * @return  count 
	 */
	public int countTicketnumberBySql(String sql){
		return ticketnumberComponent.countTicketnumberBySql(sql);
	}
	
	

