	
  
  
   //粘贴到Service接口类
 	/**
	 * 创建 景点
	 * @param id
	 * @return deleted count 
	 */
	public Scenicspot createScenicspot(Scenicspot scenicspot) throws SQLException;
	
	/**
	 * 删除 景点
	 * @param id
	 * @return deleted count 
	 */
	public int deleteScenicspot(long id);
	
	
	/**
	 * 修改 景点
	 * @param id
	 * @return updated count 
	 */
	public int updateScenicspot(Scenicspot scenicspot);

		
	/**
	 * 修改 景点但忽略空值 
	 * @param id
	 * @return 
	 */
	public int updateScenicspotIgnoreNull(Scenicspot scenicspot);
		
	
	/**
	 * 查找 景点
	 * @param where
	 * @param orderby
	 * @param limit
	 * @param offset
	 * @return
	 */
	public List findAllScenicspot(String where, String orderby,int limit,int offset);
		
	
	/**
	 * 查找 景点
	 * @param id
	 * @return
	 */
	public Scenicspot findScenicspot(long id);
	
	/**
	 * 查找 景点 by language
	 * @param id
	 * @return
	 */
	public Scenicspot findScenicspotbylanguage(long id ,Integer language);
	
	/** 
	 * 查找 景点
	 * @param where
	 * @param orderby
	 * @param pageinfo
	 * @return
	 */
	public List findAllScenicspotForPageinfo(String where, String orderby,PageInfo pageinfo);
		
	/** 
	 * 根据Sql查找景点
	 * @param sql
	 * @param limit
	 * @param offset
	 * @return
	 */
	public List findAllScenicspotBySql(String sql,int limit,int offset);
	
	
	/**
	 * 执行Sql 景点
	 * @param sql 
	 * @return updated count 
	 */
	public int excuteScenicspotBySql(String sql);
	
	/**
	 * 执行Sql 
	 * @param sql 
	 * @return  count 
	 */
	public int countScenicspotBySql(String sql);
	
	
	//------------------------------------------------------------------------
	//粘贴到Service实现类
	
	private IScenicspotComponent scenicspotComponent;
	  
 	
 	public IScenicspotComponent getScenicspotComponent() {
		return scenicspotComponent;
	}
	public void setScenicspotComponent(IScenicspotComponent  scenicspotComponent) {
		this.scenicspotComponent = scenicspotComponent;
	}
	/**
	 * 创建 景点
	 * @param id
	 * @return deleted count 
	 */
	public Scenicspot createScenicspot(Scenicspot scenicspot) throws SQLException{
	
		return scenicspotComponent.createScenicspot(scenicspot);
	}
	/**
	 * 删除 景点
	 * @param id
	 * @return deleted count 
	 */
	public int deleteScenicspot(long id){
	
		return scenicspotComponent.deleteScenicspot(id);
	}
	
	
	/**
	 * 修改 景点
	 * @param id
	 * @return updated count 
	 */
	public int updateScenicspot(Scenicspot scenicspot){
		return scenicspotComponent.updateScenicspot(scenicspot);
	
	}

		
	/**
	 * 修改 景点但忽略空值 
	 * @param id
	 * @return 
	 */
	public int updateScenicspotIgnoreNull(Scenicspot scenicspot){
			return scenicspotComponent.updateScenicspotIgnoreNull(scenicspot);
	
	}
	
	/**
	 * 查找 景点
	 * @param where
	 * @param orderby
	 * @param limit
	 * @param offset
	 * @return
	 */
	public List findAllScenicspot(String where, String orderby,int limit,int offset){
		return scenicspotComponent.findAllScenicspot(where, orderby,limit,offset);
	}
		
	
	/**
	 * 查找 景点
	 * @param id
	 * @return
	 */
	public Scenicspot findScenicspot(long id){
		return scenicspotComponent.findScenicspot(id);
	}
	
	/**
	 * 查找 景点
	 * @param id
	 * @return
	 */
	public Scenicspot findScenicspotbylanguage(long id,Integer language){
		return scenicspotComponent.findScenicspotbylanguage(id,language);
	}
	/** 
	 * 查找 景点
	 * @param where
	 * @param orderby
	 * @param pageinfo
	 * @return
	 */
	public List findAllScenicspotForPageinfo(String where, String orderby,PageInfo pageinfo){
		return scenicspotComponent.findAllScenicspot(where, orderby,pageinfo);
	}
		
	/** 
	 * 根据Sql查找景点
	 * @param sql
	 * @param limit
	 * @param offset
	 * @return
	 */
	public List findAllScenicspotBySql(String sql,int limit,int offset){
		return scenicspotComponent.findAllScenicspot(sql,limit,offset);
	}
	
	
	/**
	 * 执行Sql 景点
	 * @param sql 
	 * @return updated count 
	 */
	public int excuteScenicspotBySql(String sql){
		return scenicspotComponent.excuteScenicspotBySql(sql);
	}
	
	/**
	 * 执行Sql 
	 * @param sql 
	 * @return  count 
	 */
	public int countScenicspotBySql(String sql){
		return scenicspotComponent.countScenicspotBySql(sql);
	}
	
	

