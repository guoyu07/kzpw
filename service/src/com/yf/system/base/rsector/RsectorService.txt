	
  
  
   //粘贴到Service接口类
 	/**
	 * 创建 部门绩效表
	 * @param id
	 * @return deleted count 
	 */
	public Rsector createRsector(Rsector rsector) throws SQLException;
	
	/**
	 * 删除 部门绩效表
	 * @param id
	 * @return deleted count 
	 */
	public int deleteRsector(long id);
	
	
	/**
	 * 修改 部门绩效表
	 * @param id
	 * @return updated count 
	 */
	public int updateRsector(Rsector rsector);

		
	/**
	 * 修改 部门绩效表但忽略空值 
	 * @param id
	 * @return 
	 */
	public int updateRsectorIgnoreNull(Rsector rsector);
		
	
	/**
	 * 查找 部门绩效表
	 * @param where
	 * @param orderby
	 * @param limit
	 * @param offset
	 * @return
	 */
	public List findAllRsector(String where, String orderby,int limit,int offset);
		
	
	/**
	 * 查找 部门绩效表
	 * @param id
	 * @return
	 */
	public Rsector findRsector(long id);
	
	
	/** 
	 * 查找 部门绩效表
	 * @param where
	 * @param orderby
	 * @param pageinfo
	 * @return
	 */
	public List findAllRsectorForPageinfo(String where, String orderby,PageInfo pageinfo);
		
	/** 
	 * 根据Sql查找部门绩效表
	 * @param sql
	 * @param limit
	 * @param offset
	 * @return
	 */
	public List findAllRsectorBySql(String sql,int limit,int offset);
	
	
	/**
	 * 执行Sql 部门绩效表
	 * @param sql 
	 * @return updated count 
	 */
	public int excuteRsectorBySql(String sql);
	
	/**
	 * 执行Sql 
	 * @param sql 
	 * @return  count 
	 */
	public int countRsectorBySql(String sql);
	
	
	//------------------------------------------------------------------------
	//粘贴到Service实现类
	
	private IRsectorComponent rsectorComponent;
	  
 	
 	public IRsectorComponent getRsectorComponent() {
		return rsectorComponent;
	}
	public void setRsectorComponent(IRsectorComponent  rsectorComponent) {
		this.rsectorComponent = rsectorComponent;
	}
	/**
	 * 创建 部门绩效表
	 * @param id
	 * @return deleted count 
	 */
	public Rsector createRsector(Rsector rsector) throws SQLException{
	
		return rsectorComponent.createRsector(rsector);
	}
	/**
	 * 删除 部门绩效表
	 * @param id
	 * @return deleted count 
	 */
	public int deleteRsector(long id){
	
		return rsectorComponent.deleteRsector(id);
	}
	
	
	/**
	 * 修改 部门绩效表
	 * @param id
	 * @return updated count 
	 */
	public int updateRsector(Rsector rsector){
		return rsectorComponent.updateRsector(rsector);
	
	}

		
	/**
	 * 修改 部门绩效表但忽略空值 
	 * @param id
	 * @return 
	 */
	public int updateRsectorIgnoreNull(Rsector rsector){
			return rsectorComponent.updateRsectorIgnoreNull(rsector);
	
	}
	
	/**
	 * 查找 部门绩效表
	 * @param where
	 * @param orderby
	 * @param limit
	 * @param offset
	 * @return
	 */
	public List findAllRsector(String where, String orderby,int limit,int offset){
		return rsectorComponent.findAllRsector(where, orderby,limit,offset);
	}
		
	
	/**
	 * 查找 部门绩效表
	 * @param id
	 * @return
	 */
	public Rsector findRsector(long id){
		return rsectorComponent.findRsector(id);
	}
	
	/** 
	 * 查找 部门绩效表
	 * @param where
	 * @param orderby
	 * @param pageinfo
	 * @return
	 */
	public List findAllRsectorForPageinfo(String where, String orderby,PageInfo pageinfo){
		return rsectorComponent.findAllRsector(where, orderby,pageinfo);
	}
		
	/** 
	 * 根据Sql查找部门绩效表
	 * @param sql
	 * @param limit
	 * @param offset
	 * @return
	 */
	public List findAllRsectorBySql(String sql,int limit,int offset){
		return rsectorComponent.findAllRsector(sql,limit,offset);
	}
	
	
	/**
	 * 执行Sql 部门绩效表
	 * @param sql 
	 * @return updated count 
	 */
	public int excuteRsectorBySql(String sql){
		return rsectorComponent.excuteRsectorBySql(sql);
	}
	
	/**
	 * 执行Sql 
	 * @param sql 
	 * @return  count 
	 */
	public int countRsectorBySql(String sql){
		return rsectorComponent.countRsectorBySql(sql);
	}
	
	

