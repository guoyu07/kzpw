	
  
  
   //粘贴到Service接口类
 	/**
	 * 创建 旅游线路类型表
	 * @param id
	 * @return deleted count 
	 */
	public Triplinetype createTriplinetype(Triplinetype triplinetype) throws SQLException;
	
	/**
	 * 删除 旅游线路类型表
	 * @param id
	 * @return deleted count 
	 */
	public int deleteTriplinetype(long id);
	
	
	/**
	 * 修改 旅游线路类型表
	 * @param id
	 * @return updated count 
	 */
	public int updateTriplinetype(Triplinetype triplinetype);

		
	/**
	 * 修改 旅游线路类型表但忽略空值 
	 * @param id
	 * @return 
	 */
	public int updateTriplinetypeIgnoreNull(Triplinetype triplinetype);
		
	
	/**
	 * 查找 旅游线路类型表
	 * @param where
	 * @param orderby
	 * @param limit
	 * @param offset
	 * @return
	 */
	public List findAllTriplinetype(String where, String orderby,int limit,int offset);
		
	
	/**
	 * 查找 旅游线路类型表
	 * @param id
	 * @return
	 */
	public Triplinetype findTriplinetype(long id);
	
	/**
	 * 查找 旅游线路类型表 by language
	 * @param id
	 * @return
	 */
	public Triplinetype findTriplinetypebylanguage(long id ,Integer language);
	
	/** 
	 * 查找 旅游线路类型表
	 * @param where
	 * @param orderby
	 * @param pageinfo
	 * @return
	 */
	public List findAllTriplinetypeForPageinfo(String where, String orderby,PageInfo pageinfo);
		
	/** 
	 * 根据Sql查找旅游线路类型表
	 * @param sql
	 * @param limit
	 * @param offset
	 * @return
	 */
	public List findAllTriplinetypeBySql(String sql,int limit,int offset);
	
	
	/**
	 * 执行Sql 旅游线路类型表
	 * @param sql 
	 * @return updated count 
	 */
	public int excuteTriplinetypeBySql(String sql);
	
	/**
	 * 执行Sql 
	 * @param sql 
	 * @return  count 
	 */
	public int countTriplinetypeBySql(String sql);
	
	
	//------------------------------------------------------------------------
	//粘贴到Service实现类
	
	private ITriplinetypeComponent triplinetypeComponent;
	  
 	
 	public ITriplinetypeComponent getTriplinetypeComponent() {
		return triplinetypeComponent;
	}
	public void setTriplinetypeComponent(ITriplinetypeComponent  triplinetypeComponent) {
		this.triplinetypeComponent = triplinetypeComponent;
	}
	/**
	 * 创建 旅游线路类型表
	 * @param id
	 * @return deleted count 
	 */
	public Triplinetype createTriplinetype(Triplinetype triplinetype) throws SQLException{
	
		return triplinetypeComponent.createTriplinetype(triplinetype);
	}
	/**
	 * 删除 旅游线路类型表
	 * @param id
	 * @return deleted count 
	 */
	public int deleteTriplinetype(long id){
	
		return triplinetypeComponent.deleteTriplinetype(id);
	}
	
	
	/**
	 * 修改 旅游线路类型表
	 * @param id
	 * @return updated count 
	 */
	public int updateTriplinetype(Triplinetype triplinetype){
		return triplinetypeComponent.updateTriplinetype(triplinetype);
	
	}

		
	/**
	 * 修改 旅游线路类型表但忽略空值 
	 * @param id
	 * @return 
	 */
	public int updateTriplinetypeIgnoreNull(Triplinetype triplinetype){
			return triplinetypeComponent.updateTriplinetypeIgnoreNull(triplinetype);
	
	}
	
	/**
	 * 查找 旅游线路类型表
	 * @param where
	 * @param orderby
	 * @param limit
	 * @param offset
	 * @return
	 */
	public List findAllTriplinetype(String where, String orderby,int limit,int offset){
		return triplinetypeComponent.findAllTriplinetype(where, orderby,limit,offset);
	}
		
	
	/**
	 * 查找 旅游线路类型表
	 * @param id
	 * @return
	 */
	public Triplinetype findTriplinetype(long id){
		return triplinetypeComponent.findTriplinetype(id);
	}
	
	/**
	 * 查找 旅游线路类型表
	 * @param id
	 * @return
	 */
	public Triplinetype findTriplinetypebylanguage(long id,Integer language){
		return triplinetypeComponent.findTriplinetypebylanguage(id,language);
	}
	/** 
	 * 查找 旅游线路类型表
	 * @param where
	 * @param orderby
	 * @param pageinfo
	 * @return
	 */
	public List findAllTriplinetypeForPageinfo(String where, String orderby,PageInfo pageinfo){
		return triplinetypeComponent.findAllTriplinetype(where, orderby,pageinfo);
	}
		
	/** 
	 * 根据Sql查找旅游线路类型表
	 * @param sql
	 * @param limit
	 * @param offset
	 * @return
	 */
	public List findAllTriplinetypeBySql(String sql,int limit,int offset){
		return triplinetypeComponent.findAllTriplinetype(sql,limit,offset);
	}
	
	
	/**
	 * 执行Sql 旅游线路类型表
	 * @param sql 
	 * @return updated count 
	 */
	public int excuteTriplinetypeBySql(String sql){
		return triplinetypeComponent.excuteTriplinetypeBySql(sql);
	}
	
	/**
	 * 执行Sql 
	 * @param sql 
	 * @return  count 
	 */
	public int countTriplinetypeBySql(String sql){
		return triplinetypeComponent.countTriplinetypeBySql(sql);
	}
	
	

