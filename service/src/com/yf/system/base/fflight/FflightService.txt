	
  
  
   //粘贴到Service接口类
 	/**
	 * 创建 国际机票行程
	 * @param id
	 * @return deleted count 
	 */
	public Fflight createFflight(Fflight fflight) throws SQLException;
	
	/**
	 * 删除 国际机票行程
	 * @param id
	 * @return deleted count 
	 */
	public int deleteFflight(long id);
	
	
	/**
	 * 修改 国际机票行程
	 * @param id
	 * @return updated count 
	 */
	public int updateFflight(Fflight fflight);

		
	/**
	 * 修改 国际机票行程但忽略空值 
	 * @param id
	 * @return 
	 */
	public int updateFflightIgnoreNull(Fflight fflight);
		
	
	/**
	 * 查找 国际机票行程
	 * @param where
	 * @param orderby
	 * @param limit
	 * @param offset
	 * @return
	 */
	public List findAllFflight(String where, String orderby,int limit,int offset);
		
	
	/**
	 * 查找 国际机票行程
	 * @param id
	 * @return
	 */
	public Fflight findFflight(long id);
	
	
	/** 
	 * 查找 国际机票行程
	 * @param where
	 * @param orderby
	 * @param pageinfo
	 * @return
	 */
	public List findAllFflightForPageinfo(String where, String orderby,PageInfo pageinfo);
		
	/** 
	 * 根据Sql查找国际机票行程
	 * @param sql
	 * @param limit
	 * @param offset
	 * @return
	 */
	public List findAllFflightBySql(String sql,int limit,int offset);
	
	
	/**
	 * 执行Sql 国际机票行程
	 * @param sql 
	 * @return updated count 
	 */
	public int excuteFflightBySql(String sql);
	
	/**
	 * 执行Sql 
	 * @param sql 
	 * @return  count 
	 */
	public int countFflightBySql(String sql);
	
	
	//------------------------------------------------------------------------
	//粘贴到Service实现类
	
	private IFflightComponent fflightComponent;
	  
 	
 	public IFflightComponent getFflightComponent() {
		return fflightComponent;
	}
	public void setFflightComponent(IFflightComponent  fflightComponent) {
		this.fflightComponent = fflightComponent;
	}
	/**
	 * 创建 国际机票行程
	 * @param id
	 * @return deleted count 
	 */
	public Fflight createFflight(Fflight fflight) throws SQLException{
	
		return fflightComponent.createFflight(fflight);
	}
	/**
	 * 删除 国际机票行程
	 * @param id
	 * @return deleted count 
	 */
	public int deleteFflight(long id){
	
		return fflightComponent.deleteFflight(id);
	}
	
	
	/**
	 * 修改 国际机票行程
	 * @param id
	 * @return updated count 
	 */
	public int updateFflight(Fflight fflight){
		return fflightComponent.updateFflight(fflight);
	
	}

		
	/**
	 * 修改 国际机票行程但忽略空值 
	 * @param id
	 * @return 
	 */
	public int updateFflightIgnoreNull(Fflight fflight){
			return fflightComponent.updateFflightIgnoreNull(fflight);
	
	}
	
	/**
	 * 查找 国际机票行程
	 * @param where
	 * @param orderby
	 * @param limit
	 * @param offset
	 * @return
	 */
	public List findAllFflight(String where, String orderby,int limit,int offset){
		return fflightComponent.findAllFflight(where, orderby,limit,offset);
	}
		
	
	/**
	 * 查找 国际机票行程
	 * @param id
	 * @return
	 */
	public Fflight findFflight(long id){
		return fflightComponent.findFflight(id);
	}
	
	/** 
	 * 查找 国际机票行程
	 * @param where
	 * @param orderby
	 * @param pageinfo
	 * @return
	 */
	public List findAllFflightForPageinfo(String where, String orderby,PageInfo pageinfo){
		return fflightComponent.findAllFflight(where, orderby,pageinfo);
	}
		
	/** 
	 * 根据Sql查找国际机票行程
	 * @param sql
	 * @param limit
	 * @param offset
	 * @return
	 */
	public List findAllFflightBySql(String sql,int limit,int offset){
		return fflightComponent.findAllFflight(sql,limit,offset);
	}
	
	
	/**
	 * 执行Sql 国际机票行程
	 * @param sql 
	 * @return updated count 
	 */
	public int excuteFflightBySql(String sql){
		return fflightComponent.excuteFflightBySql(sql);
	}
	
	/**
	 * 执行Sql 
	 * @param sql 
	 * @return  count 
	 */
	public int countFflightBySql(String sql){
		return fflightComponent.countFflightBySql(sql);
	}
	
	

