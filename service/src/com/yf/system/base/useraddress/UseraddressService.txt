	
  
  
   //粘贴到Service接口类
 	/**
	 * 创建 会员常用配送地址
	 * @param id
	 * @return deleted count 
	 */
	public Useraddress createUseraddress(Useraddress useraddress) throws SQLException;
	
	/**
	 * 删除 会员常用配送地址
	 * @param id
	 * @return deleted count 
	 */
	public int deleteUseraddress(long id);
	
	
	/**
	 * 修改 会员常用配送地址
	 * @param id
	 * @return updated count 
	 */
	public int updateUseraddress(Useraddress useraddress);

		
	/**
	 * 修改 会员常用配送地址但忽略空值 
	 * @param id
	 * @return 
	 */
	public int updateUseraddressIgnoreNull(Useraddress useraddress);
		
	
	/**
	 * 查找 会员常用配送地址
	 * @param where
	 * @param orderby
	 * @param limit
	 * @param offset
	 * @return
	 */
	public List findAllUseraddress(String where, String orderby,int limit,int offset);
		
	
	/**
	 * 查找 会员常用配送地址
	 * @param id
	 * @return
	 */
	public Useraddress findUseraddress(long id);
	
	
	/** 
	 * 查找 会员常用配送地址
	 * @param where
	 * @param orderby
	 * @param pageinfo
	 * @return
	 */
	public List findAllUseraddressForPageinfo(String where, String orderby,PageInfo pageinfo);
		
	/** 
	 * 根据Sql查找会员常用配送地址
	 * @param sql
	 * @param limit
	 * @param offset
	 * @return
	 */
	public List findAllUseraddressBySql(String sql,int limit,int offset);
	
	
	/**
	 * 执行Sql 会员常用配送地址
	 * @param sql 
	 * @return updated count 
	 */
	public int excuteUseraddressBySql(String sql);
	
	/**
	 * 执行Sql 
	 * @param sql 
	 * @return  count 
	 */
	public int countUseraddressBySql(String sql);
	
	
	//------------------------------------------------------------------------
	//粘贴到Service实现类
	
	private IUseraddressComponent useraddressComponent;
	  
 	
 	public IUseraddressComponent getUseraddressComponent() {
		return useraddressComponent;
	}
	public void setUseraddressComponent(IUseraddressComponent  useraddressComponent) {
		this.useraddressComponent = useraddressComponent;
	}
	/**
	 * 创建 会员常用配送地址
	 * @param id
	 * @return deleted count 
	 */
	public Useraddress createUseraddress(Useraddress useraddress) throws SQLException{
	
		return useraddressComponent.createUseraddress(useraddress);
	}
	/**
	 * 删除 会员常用配送地址
	 * @param id
	 * @return deleted count 
	 */
	public int deleteUseraddress(long id){
	
		return useraddressComponent.deleteUseraddress(id);
	}
	
	
	/**
	 * 修改 会员常用配送地址
	 * @param id
	 * @return updated count 
	 */
	public int updateUseraddress(Useraddress useraddress){
		return useraddressComponent.updateUseraddress(useraddress);
	
	}

		
	/**
	 * 修改 会员常用配送地址但忽略空值 
	 * @param id
	 * @return 
	 */
	public int updateUseraddressIgnoreNull(Useraddress useraddress){
			return useraddressComponent.updateUseraddressIgnoreNull(useraddress);
	
	}
	
	/**
	 * 查找 会员常用配送地址
	 * @param where
	 * @param orderby
	 * @param limit
	 * @param offset
	 * @return
	 */
	public List findAllUseraddress(String where, String orderby,int limit,int offset){
		return useraddressComponent.findAllUseraddress(where, orderby,limit,offset);
	}
		
	
	/**
	 * 查找 会员常用配送地址
	 * @param id
	 * @return
	 */
	public Useraddress findUseraddress(long id){
		return useraddressComponent.findUseraddress(id);
	}
	
	/** 
	 * 查找 会员常用配送地址
	 * @param where
	 * @param orderby
	 * @param pageinfo
	 * @return
	 */
	public List findAllUseraddressForPageinfo(String where, String orderby,PageInfo pageinfo){
		return useraddressComponent.findAllUseraddress(where, orderby,pageinfo);
	}
		
	/** 
	 * 根据Sql查找会员常用配送地址
	 * @param sql
	 * @param limit
	 * @param offset
	 * @return
	 */
	public List findAllUseraddressBySql(String sql,int limit,int offset){
		return useraddressComponent.findAllUseraddress(sql,limit,offset);
	}
	
	
	/**
	 * 执行Sql 会员常用配送地址
	 * @param sql 
	 * @return updated count 
	 */
	public int excuteUseraddressBySql(String sql){
		return useraddressComponent.excuteUseraddressBySql(sql);
	}
	
	/**
	 * 执行Sql 
	 * @param sql 
	 * @return  count 
	 */
	public int countUseraddressBySql(String sql){
		return useraddressComponent.countUseraddressBySql(sql);
	}
	
	

