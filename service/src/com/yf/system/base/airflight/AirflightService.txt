	
  
  
   //粘贴到Service接口类
 	/**
	 * 创建 航班基础信息表
	 * @param id
	 * @return deleted count 
	 */
	public Airflight createAirflight(Airflight airflight) throws SQLException;
	
	/**
	 * 删除 航班基础信息表
	 * @param id
	 * @return deleted count 
	 */
	public int deleteAirflight(long id);
	
	
	/**
	 * 修改 航班基础信息表
	 * @param id
	 * @return updated count 
	 */
	public int updateAirflight(Airflight airflight);

		
	/**
	 * 修改 航班基础信息表但忽略空值 
	 * @param id
	 * @return 
	 */
	public int updateAirflightIgnoreNull(Airflight airflight);
		
	
	/**
	 * 查找 航班基础信息表
	 * @param where
	 * @param orderby
	 * @param limit
	 * @param offset
	 * @return
	 */
	public List findAllAirflight(String where, String orderby,int limit,int offset);
		
	
	/**
	 * 查找 航班基础信息表
	 * @param id
	 * @return
	 */
	public Airflight findAirflight(long id);
	
	/**
	 * 查找 航班基础信息表 by language
	 * @param id
	 * @return
	 */
	public Airflight findAirflightbylanguage(long id ,Integer language);
	
	/** 
	 * 查找 航班基础信息表
	 * @param where
	 * @param orderby
	 * @param pageinfo
	 * @return
	 */
	public List findAllAirflightForPageinfo(String where, String orderby,PageInfo pageinfo);
		
	/** 
	 * 根据Sql查找航班基础信息表
	 * @param sql
	 * @param limit
	 * @param offset
	 * @return
	 */
	public List findAllAirflightBySql(String sql,int limit,int offset);
	
	
	/**
	 * 执行Sql 航班基础信息表
	 * @param sql 
	 * @return updated count 
	 */
	public int excuteAirflightBySql(String sql);
	
	/**
	 * 执行Sql 
	 * @param sql 
	 * @return  count 
	 */
	public int countAirflightBySql(String sql);
	
	
	//------------------------------------------------------------------------
	//粘贴到Service实现类
	
	private IAirflightComponent airflightComponent;
	  
 	
 	public IAirflightComponent getAirflightComponent() {
		return airflightComponent;
	}
	public void setAirflightComponent(IAirflightComponent  airflightComponent) {
		this.airflightComponent = airflightComponent;
	}
	/**
	 * 创建 航班基础信息表
	 * @param id
	 * @return deleted count 
	 */
	public Airflight createAirflight(Airflight airflight) throws SQLException{
	
		return airflightComponent.createAirflight(airflight);
	}
	/**
	 * 删除 航班基础信息表
	 * @param id
	 * @return deleted count 
	 */
	public int deleteAirflight(long id){
	
		return airflightComponent.deleteAirflight(id);
	}
	
	
	/**
	 * 修改 航班基础信息表
	 * @param id
	 * @return updated count 
	 */
	public int updateAirflight(Airflight airflight){
		return airflightComponent.updateAirflight(airflight);
	
	}

		
	/**
	 * 修改 航班基础信息表但忽略空值 
	 * @param id
	 * @return 
	 */
	public int updateAirflightIgnoreNull(Airflight airflight){
			return airflightComponent.updateAirflightIgnoreNull(airflight);
	
	}
	
	/**
	 * 查找 航班基础信息表
	 * @param where
	 * @param orderby
	 * @param limit
	 * @param offset
	 * @return
	 */
	public List findAllAirflight(String where, String orderby,int limit,int offset){
		return airflightComponent.findAllAirflight(where, orderby,limit,offset);
	}
		
	
	/**
	 * 查找 航班基础信息表
	 * @param id
	 * @return
	 */
	public Airflight findAirflight(long id){
		return airflightComponent.findAirflight(id);
	}
	
	/**
	 * 查找 航班基础信息表
	 * @param id
	 * @return
	 */
	public Airflight findAirflightbylanguage(long id,Integer language){
		return airflightComponent.findAirflightbylanguage(id,language);
	}
	/** 
	 * 查找 航班基础信息表
	 * @param where
	 * @param orderby
	 * @param pageinfo
	 * @return
	 */
	public List findAllAirflightForPageinfo(String where, String orderby,PageInfo pageinfo){
		return airflightComponent.findAllAirflight(where, orderby,pageinfo);
	}
		
	/** 
	 * 根据Sql查找航班基础信息表
	 * @param sql
	 * @param limit
	 * @param offset
	 * @return
	 */
	public List findAllAirflightBySql(String sql,int limit,int offset){
		return airflightComponent.findAllAirflight(sql,limit,offset);
	}
	
	
	/**
	 * 执行Sql 航班基础信息表
	 * @param sql 
	 * @return updated count 
	 */
	public int excuteAirflightBySql(String sql){
		return airflightComponent.excuteAirflightBySql(sql);
	}
	
	/**
	 * 执行Sql 
	 * @param sql 
	 * @return  count 
	 */
	public int countAirflightBySql(String sql){
		return airflightComponent.countAirflightBySql(sql);
	}
	
	

