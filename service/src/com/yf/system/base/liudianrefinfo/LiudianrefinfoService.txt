	
  
  
   //粘贴到Service接口类
 	/**
	 * 创建 留点设置关联表
	 * @param id
	 * @return deleted count 
	 */
	public Liudianrefinfo createLiudianrefinfo(Liudianrefinfo liudianrefinfo) throws SQLException;
	
	/**
	 * 删除 留点设置关联表
	 * @param id
	 * @return deleted count 
	 */
	public int deleteLiudianrefinfo(long id);
	
	
	/**
	 * 修改 留点设置关联表
	 * @param id
	 * @return updated count 
	 */
	public int updateLiudianrefinfo(Liudianrefinfo liudianrefinfo);

		
	/**
	 * 修改 留点设置关联表但忽略空值 
	 * @param id
	 * @return 
	 */
	public int updateLiudianrefinfoIgnoreNull(Liudianrefinfo liudianrefinfo);
		
	
	/**
	 * 查找 留点设置关联表
	 * @param where
	 * @param orderby
	 * @param limit
	 * @param offset
	 * @return
	 */
	public List findAllLiudianrefinfo(String where, String orderby,int limit,int offset);
		
	
	/**
	 * 查找 留点设置关联表
	 * @param id
	 * @return
	 */
	public Liudianrefinfo findLiudianrefinfo(long id);
	
	/**
	 * 查找 留点设置关联表 by language
	 * @param id
	 * @return
	 */
	public Liudianrefinfo findLiudianrefinfobylanguage(long id ,Integer language);
	
	/** 
	 * 查找 留点设置关联表
	 * @param where
	 * @param orderby
	 * @param pageinfo
	 * @return
	 */
	public List findAllLiudianrefinfoForPageinfo(String where, String orderby,PageInfo pageinfo);
		
	/** 
	 * 根据Sql查找留点设置关联表
	 * @param sql
	 * @param limit
	 * @param offset
	 * @return
	 */
	public List findAllLiudianrefinfoBySql(String sql,int limit,int offset);
	
	
	/**
	 * 执行Sql 留点设置关联表
	 * @param sql 
	 * @return updated count 
	 */
	public int excuteLiudianrefinfoBySql(String sql);
	
	/**
	 * 执行Sql 
	 * @param sql 
	 * @return  count 
	 */
	public int countLiudianrefinfoBySql(String sql);
	
	
	//------------------------------------------------------------------------
	//粘贴到Service实现类
	
	private ILiudianrefinfoComponent liudianrefinfoComponent;
	  
 	
 	public ILiudianrefinfoComponent getLiudianrefinfoComponent() {
		return liudianrefinfoComponent;
	}
	public void setLiudianrefinfoComponent(ILiudianrefinfoComponent  liudianrefinfoComponent) {
		this.liudianrefinfoComponent = liudianrefinfoComponent;
	}
	/**
	 * 创建 留点设置关联表
	 * @param id
	 * @return deleted count 
	 */
	public Liudianrefinfo createLiudianrefinfo(Liudianrefinfo liudianrefinfo) throws SQLException{
	
		return liudianrefinfoComponent.createLiudianrefinfo(liudianrefinfo);
	}
	/**
	 * 删除 留点设置关联表
	 * @param id
	 * @return deleted count 
	 */
	public int deleteLiudianrefinfo(long id){
	
		return liudianrefinfoComponent.deleteLiudianrefinfo(id);
	}
	
	
	/**
	 * 修改 留点设置关联表
	 * @param id
	 * @return updated count 
	 */
	public int updateLiudianrefinfo(Liudianrefinfo liudianrefinfo){
		return liudianrefinfoComponent.updateLiudianrefinfo(liudianrefinfo);
	
	}

		
	/**
	 * 修改 留点设置关联表但忽略空值 
	 * @param id
	 * @return 
	 */
	public int updateLiudianrefinfoIgnoreNull(Liudianrefinfo liudianrefinfo){
			return liudianrefinfoComponent.updateLiudianrefinfoIgnoreNull(liudianrefinfo);
	
	}
	
	/**
	 * 查找 留点设置关联表
	 * @param where
	 * @param orderby
	 * @param limit
	 * @param offset
	 * @return
	 */
	public List findAllLiudianrefinfo(String where, String orderby,int limit,int offset){
		return liudianrefinfoComponent.findAllLiudianrefinfo(where, orderby,limit,offset);
	}
		
	
	/**
	 * 查找 留点设置关联表
	 * @param id
	 * @return
	 */
	public Liudianrefinfo findLiudianrefinfo(long id){
		return liudianrefinfoComponent.findLiudianrefinfo(id);
	}
	
	/**
	 * 查找 留点设置关联表
	 * @param id
	 * @return
	 */
	public Liudianrefinfo findLiudianrefinfobylanguage(long id,Integer language){
		return liudianrefinfoComponent.findLiudianrefinfobylanguage(id,language);
	}
	/** 
	 * 查找 留点设置关联表
	 * @param where
	 * @param orderby
	 * @param pageinfo
	 * @return
	 */
	public List findAllLiudianrefinfoForPageinfo(String where, String orderby,PageInfo pageinfo){
		return liudianrefinfoComponent.findAllLiudianrefinfo(where, orderby,pageinfo);
	}
		
	/** 
	 * 根据Sql查找留点设置关联表
	 * @param sql
	 * @param limit
	 * @param offset
	 * @return
	 */
	public List findAllLiudianrefinfoBySql(String sql,int limit,int offset){
		return liudianrefinfoComponent.findAllLiudianrefinfo(sql,limit,offset);
	}
	
	
	/**
	 * 执行Sql 留点设置关联表
	 * @param sql 
	 * @return updated count 
	 */
	public int excuteLiudianrefinfoBySql(String sql){
		return liudianrefinfoComponent.excuteLiudianrefinfoBySql(sql);
	}
	
	/**
	 * 执行Sql 
	 * @param sql 
	 * @return  count 
	 */
	public int countLiudianrefinfoBySql(String sql){
		return liudianrefinfoComponent.countLiudianrefinfoBySql(sql);
	}
	
	

