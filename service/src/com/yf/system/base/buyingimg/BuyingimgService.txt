	
  
  
   //粘贴到Service接口类
 	/**
	 * 创建 团购图片信息
	 * @param id
	 * @return deleted count 
	 */
	public Buyingimg createBuyingimg(Buyingimg buyingimg) throws SQLException;
	
	/**
	 * 删除 团购图片信息
	 * @param id
	 * @return deleted count 
	 */
	public int deleteBuyingimg(long id);
	
	
	/**
	 * 修改 团购图片信息
	 * @param id
	 * @return updated count 
	 */
	public int updateBuyingimg(Buyingimg buyingimg);

		
	/**
	 * 修改 团购图片信息但忽略空值 
	 * @param id
	 * @return 
	 */
	public int updateBuyingimgIgnoreNull(Buyingimg buyingimg);
		
	
	/**
	 * 查找 团购图片信息
	 * @param where
	 * @param orderby
	 * @param limit
	 * @param offset
	 * @return
	 */
	public List findAllBuyingimg(String where, String orderby,int limit,int offset);
		
	
	/**
	 * 查找 团购图片信息
	 * @param id
	 * @return
	 */
	public Buyingimg findBuyingimg(long id);
	
	
	/** 
	 * 查找 团购图片信息
	 * @param where
	 * @param orderby
	 * @param pageinfo
	 * @return
	 */
	public List findAllBuyingimgForPageinfo(String where, String orderby,PageInfo pageinfo);
		
	/** 
	 * 根据Sql查找团购图片信息
	 * @param sql
	 * @param limit
	 * @param offset
	 * @return
	 */
	public List findAllBuyingimgBySql(String sql,int limit,int offset);
	
	
	/**
	 * 执行Sql 团购图片信息
	 * @param sql 
	 * @return updated count 
	 */
	public int excuteBuyingimgBySql(String sql);
	
	/**
	 * 执行Sql 
	 * @param sql 
	 * @return  count 
	 */
	public int countBuyingimgBySql(String sql);
	
	
	//------------------------------------------------------------------------
	//粘贴到Service实现类
	
	private IBuyingimgComponent buyingimgComponent;
	  
 	
 	public IBuyingimgComponent getBuyingimgComponent() {
		return buyingimgComponent;
	}
	public void setBuyingimgComponent(IBuyingimgComponent  buyingimgComponent) {
		this.buyingimgComponent = buyingimgComponent;
	}
	/**
	 * 创建 团购图片信息
	 * @param id
	 * @return deleted count 
	 */
	public Buyingimg createBuyingimg(Buyingimg buyingimg) throws SQLException{
	
		return buyingimgComponent.createBuyingimg(buyingimg);
	}
	/**
	 * 删除 团购图片信息
	 * @param id
	 * @return deleted count 
	 */
	public int deleteBuyingimg(long id){
	
		return buyingimgComponent.deleteBuyingimg(id);
	}
	
	
	/**
	 * 修改 团购图片信息
	 * @param id
	 * @return updated count 
	 */
	public int updateBuyingimg(Buyingimg buyingimg){
		return buyingimgComponent.updateBuyingimg(buyingimg);
	
	}

		
	/**
	 * 修改 团购图片信息但忽略空值 
	 * @param id
	 * @return 
	 */
	public int updateBuyingimgIgnoreNull(Buyingimg buyingimg){
			return buyingimgComponent.updateBuyingimgIgnoreNull(buyingimg);
	
	}
	
	/**
	 * 查找 团购图片信息
	 * @param where
	 * @param orderby
	 * @param limit
	 * @param offset
	 * @return
	 */
	public List findAllBuyingimg(String where, String orderby,int limit,int offset){
		return buyingimgComponent.findAllBuyingimg(where, orderby,limit,offset);
	}
		
	
	/**
	 * 查找 团购图片信息
	 * @param id
	 * @return
	 */
	public Buyingimg findBuyingimg(long id){
		return buyingimgComponent.findBuyingimg(id);
	}
	
	/** 
	 * 查找 团购图片信息
	 * @param where
	 * @param orderby
	 * @param pageinfo
	 * @return
	 */
	public List findAllBuyingimgForPageinfo(String where, String orderby,PageInfo pageinfo){
		return buyingimgComponent.findAllBuyingimg(where, orderby,pageinfo);
	}
		
	/** 
	 * 根据Sql查找团购图片信息
	 * @param sql
	 * @param limit
	 * @param offset
	 * @return
	 */
	public List findAllBuyingimgBySql(String sql,int limit,int offset){
		return buyingimgComponent.findAllBuyingimg(sql,limit,offset);
	}
	
	
	/**
	 * 执行Sql 团购图片信息
	 * @param sql 
	 * @return updated count 
	 */
	public int excuteBuyingimgBySql(String sql){
		return buyingimgComponent.excuteBuyingimgBySql(sql);
	}
	
	/**
	 * 执行Sql 
	 * @param sql 
	 * @return  count 
	 */
	public int countBuyingimgBySql(String sql){
		return buyingimgComponent.countBuyingimgBySql(sql);
	}
	
	

