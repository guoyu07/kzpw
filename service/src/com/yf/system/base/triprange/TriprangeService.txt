	
  
  
   //粘贴到Service接口类
 	/**
	 * 创建 行程
	 * @param id
	 * @return deleted count 
	 */
	public Triprange createTriprange(Triprange triprange) throws SQLException;
	
	/**
	 * 删除 行程
	 * @param id
	 * @return deleted count 
	 */
	public int deleteTriprange(long id);
	
	
	/**
	 * 修改 行程
	 * @param id
	 * @return updated count 
	 */
	public int updateTriprange(Triprange triprange);

		
	/**
	 * 修改 行程但忽略空值 
	 * @param id
	 * @return 
	 */
	public int updateTriprangeIgnoreNull(Triprange triprange);
		
	
	/**
	 * 查找 行程
	 * @param where
	 * @param orderby
	 * @param limit
	 * @param offset
	 * @return
	 */
	public List findAllTriprange(String where, String orderby,int limit,int offset);
		
	
	/**
	 * 查找 行程
	 * @param id
	 * @return
	 */
	public Triprange findTriprange(long id);
	
	/**
	 * 查找 行程 by language
	 * @param id
	 * @return
	 */
	public Triprange findTriprangebylanguage(long id ,Integer language);
	
	/** 
	 * 查找 行程
	 * @param where
	 * @param orderby
	 * @param pageinfo
	 * @return
	 */
	public List findAllTriprangeForPageinfo(String where, String orderby,PageInfo pageinfo);
		
	/** 
	 * 根据Sql查找行程
	 * @param sql
	 * @param limit
	 * @param offset
	 * @return
	 */
	public List findAllTriprangeBySql(String sql,int limit,int offset);
	
	
	/**
	 * 执行Sql 行程
	 * @param sql 
	 * @return updated count 
	 */
	public int excuteTriprangeBySql(String sql);
	
	/**
	 * 执行Sql 
	 * @param sql 
	 * @return  count 
	 */
	public int countTriprangeBySql(String sql);
	
	
	//------------------------------------------------------------------------
	//粘贴到Service实现类
	
	private ITriprangeComponent triprangeComponent;
	  
 	
 	public ITriprangeComponent getTriprangeComponent() {
		return triprangeComponent;
	}
	public void setTriprangeComponent(ITriprangeComponent  triprangeComponent) {
		this.triprangeComponent = triprangeComponent;
	}
	/**
	 * 创建 行程
	 * @param id
	 * @return deleted count 
	 */
	public Triprange createTriprange(Triprange triprange) throws SQLException{
	
		return triprangeComponent.createTriprange(triprange);
	}
	/**
	 * 删除 行程
	 * @param id
	 * @return deleted count 
	 */
	public int deleteTriprange(long id){
	
		return triprangeComponent.deleteTriprange(id);
	}
	
	
	/**
	 * 修改 行程
	 * @param id
	 * @return updated count 
	 */
	public int updateTriprange(Triprange triprange){
		return triprangeComponent.updateTriprange(triprange);
	
	}

		
	/**
	 * 修改 行程但忽略空值 
	 * @param id
	 * @return 
	 */
	public int updateTriprangeIgnoreNull(Triprange triprange){
			return triprangeComponent.updateTriprangeIgnoreNull(triprange);
	
	}
	
	/**
	 * 查找 行程
	 * @param where
	 * @param orderby
	 * @param limit
	 * @param offset
	 * @return
	 */
	public List findAllTriprange(String where, String orderby,int limit,int offset){
		return triprangeComponent.findAllTriprange(where, orderby,limit,offset);
	}
		
	
	/**
	 * 查找 行程
	 * @param id
	 * @return
	 */
	public Triprange findTriprange(long id){
		return triprangeComponent.findTriprange(id);
	}
	
	/**
	 * 查找 行程
	 * @param id
	 * @return
	 */
	public Triprange findTriprangebylanguage(long id,Integer language){
		return triprangeComponent.findTriprangebylanguage(id,language);
	}
	/** 
	 * 查找 行程
	 * @param where
	 * @param orderby
	 * @param pageinfo
	 * @return
	 */
	public List findAllTriprangeForPageinfo(String where, String orderby,PageInfo pageinfo){
		return triprangeComponent.findAllTriprange(where, orderby,pageinfo);
	}
		
	/** 
	 * 根据Sql查找行程
	 * @param sql
	 * @param limit
	 * @param offset
	 * @return
	 */
	public List findAllTriprangeBySql(String sql,int limit,int offset){
		return triprangeComponent.findAllTriprange(sql,limit,offset);
	}
	
	
	/**
	 * 执行Sql 行程
	 * @param sql 
	 * @return updated count 
	 */
	public int excuteTriprangeBySql(String sql){
		return triprangeComponent.excuteTriprangeBySql(sql);
	}
	
	/**
	 * 执行Sql 
	 * @param sql 
	 * @return  count 
	 */
	public int countTriprangeBySql(String sql){
		return triprangeComponent.countTriprangeBySql(sql);
	}
	
	

