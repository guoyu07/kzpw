	
  
  
   //粘贴到Service接口类
 	/**
	 * 创建 集团客户环比统计表
	 * @param id
	 * @return deleted count 
	 */
	public Rgroupcustomers createRgroupcustomers(Rgroupcustomers rgroupcustomers) throws SQLException;
	
	/**
	 * 删除 集团客户环比统计表
	 * @param id
	 * @return deleted count 
	 */
	public int deleteRgroupcustomers(long id);
	
	
	/**
	 * 修改 集团客户环比统计表
	 * @param id
	 * @return updated count 
	 */
	public int updateRgroupcustomers(Rgroupcustomers rgroupcustomers);

		
	/**
	 * 修改 集团客户环比统计表但忽略空值 
	 * @param id
	 * @return 
	 */
	public int updateRgroupcustomersIgnoreNull(Rgroupcustomers rgroupcustomers);
		
	
	/**
	 * 查找 集团客户环比统计表
	 * @param where
	 * @param orderby
	 * @param limit
	 * @param offset
	 * @return
	 */
	public List findAllRgroupcustomers(String where, String orderby,int limit,int offset);
		
	
	/**
	 * 查找 集团客户环比统计表
	 * @param id
	 * @return
	 */
	public Rgroupcustomers findRgroupcustomers(long id);
	
	
	/** 
	 * 查找 集团客户环比统计表
	 * @param where
	 * @param orderby
	 * @param pageinfo
	 * @return
	 */
	public List findAllRgroupcustomersForPageinfo(String where, String orderby,PageInfo pageinfo);
		
	/** 
	 * 根据Sql查找集团客户环比统计表
	 * @param sql
	 * @param limit
	 * @param offset
	 * @return
	 */
	public List findAllRgroupcustomersBySql(String sql,int limit,int offset);
	
	
	/**
	 * 执行Sql 集团客户环比统计表
	 * @param sql 
	 * @return updated count 
	 */
	public int excuteRgroupcustomersBySql(String sql);
	
	/**
	 * 执行Sql 
	 * @param sql 
	 * @return  count 
	 */
	public int countRgroupcustomersBySql(String sql);
	
	
	//------------------------------------------------------------------------
	//粘贴到Service实现类
	
	private IRgroupcustomersComponent rgroupcustomersComponent;
	  
 	
 	public IRgroupcustomersComponent getRgroupcustomersComponent() {
		return rgroupcustomersComponent;
	}
	public void setRgroupcustomersComponent(IRgroupcustomersComponent  rgroupcustomersComponent) {
		this.rgroupcustomersComponent = rgroupcustomersComponent;
	}
	/**
	 * 创建 集团客户环比统计表
	 * @param id
	 * @return deleted count 
	 */
	public Rgroupcustomers createRgroupcustomers(Rgroupcustomers rgroupcustomers) throws SQLException{
	
		return rgroupcustomersComponent.createRgroupcustomers(rgroupcustomers);
	}
	/**
	 * 删除 集团客户环比统计表
	 * @param id
	 * @return deleted count 
	 */
	public int deleteRgroupcustomers(long id){
	
		return rgroupcustomersComponent.deleteRgroupcustomers(id);
	}
	
	
	/**
	 * 修改 集团客户环比统计表
	 * @param id
	 * @return updated count 
	 */
	public int updateRgroupcustomers(Rgroupcustomers rgroupcustomers){
		return rgroupcustomersComponent.updateRgroupcustomers(rgroupcustomers);
	
	}

		
	/**
	 * 修改 集团客户环比统计表但忽略空值 
	 * @param id
	 * @return 
	 */
	public int updateRgroupcustomersIgnoreNull(Rgroupcustomers rgroupcustomers){
			return rgroupcustomersComponent.updateRgroupcustomersIgnoreNull(rgroupcustomers);
	
	}
	
	/**
	 * 查找 集团客户环比统计表
	 * @param where
	 * @param orderby
	 * @param limit
	 * @param offset
	 * @return
	 */
	public List findAllRgroupcustomers(String where, String orderby,int limit,int offset){
		return rgroupcustomersComponent.findAllRgroupcustomers(where, orderby,limit,offset);
	}
		
	
	/**
	 * 查找 集团客户环比统计表
	 * @param id
	 * @return
	 */
	public Rgroupcustomers findRgroupcustomers(long id){
		return rgroupcustomersComponent.findRgroupcustomers(id);
	}
	
	/** 
	 * 查找 集团客户环比统计表
	 * @param where
	 * @param orderby
	 * @param pageinfo
	 * @return
	 */
	public List findAllRgroupcustomersForPageinfo(String where, String orderby,PageInfo pageinfo){
		return rgroupcustomersComponent.findAllRgroupcustomers(where, orderby,pageinfo);
	}
		
	/** 
	 * 根据Sql查找集团客户环比统计表
	 * @param sql
	 * @param limit
	 * @param offset
	 * @return
	 */
	public List findAllRgroupcustomersBySql(String sql,int limit,int offset){
		return rgroupcustomersComponent.findAllRgroupcustomers(sql,limit,offset);
	}
	
	
	/**
	 * 执行Sql 集团客户环比统计表
	 * @param sql 
	 * @return updated count 
	 */
	public int excuteRgroupcustomersBySql(String sql){
		return rgroupcustomersComponent.excuteRgroupcustomersBySql(sql);
	}
	
	/**
	 * 执行Sql 
	 * @param sql 
	 * @return  count 
	 */
	public int countRgroupcustomersBySql(String sql){
		return rgroupcustomersComponent.countRgroupcustomersBySql(sql);
	}
	
	

