<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap  PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"  "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="Systemrole">
  
  <typeAlias alias="Systemrole" type="com.yf.system.base.systemrole.Systemrole"/>
  

  <resultMap id="resultSystemroleMap" class="Systemrole">
  
     <result property="id" column="ID"/>
  
     <result property="name" column="C_NAME"/>
  
     <result property="createuser" column="C_CREATEUSER"/>
  
     <result property="createtime" column="C_CREATETIME"/>
  
     <result property="modifyuser" column="C_MODIFYUSER"/>
  
     <result property="modifytime" column="C_MODIFYTIME"/>
  
     <result property="customeragentid" column="C_CUSTOMERAGENTID"/>
  
     <result property="type" column="C_TYPE"/>
  
     <result property="code" column="C_CODE"/>
     <result property="bussinessid" column="C_BUSSINESSID"/>
   
  </resultMap>
  
  <select id="findAllSystemrole"  resultMap="resultSystemroleMap"  parameterClass="java.util.Map">
  
    select * from T_SYSTEMROLE
    
    <dynamic prepend="">
		<isNotEmpty prepend="" property="where">
			$where$
		</isNotEmpty>
	
	</dynamic>
     <dynamic prepend="">
		<isNotEmpty prepend="" property="orderby">
			$orderby$
		</isNotEmpty>
	
	</dynamic>
	
  </select>
  
   <select id="findAllSystemroleBySql"  resultMap="resultSystemroleMap"  parameterClass="java.util.Map">  
			$sql$
   </select>
   
   <select id="queryAllSystemroleBySql" resultClass="Systemrole"  parameterClass="java.util.Map">  
			$sql$
   </select>
   
   
   <update id="excuteSystemroleBySql"   parameterClass="java.util.Map">  
			$sql$
   </update>
  
   <select id="countSystemroleBySql"  resultClass="int"  parameterClass="java.util.Map">
		
		<dynamic prepend="">
			<isEmpty prepend="" property="sql">
				select count(*) from T_SYSTEMROLE
			</isEmpty>
			<isNotEmpty prepend="" property="sql">
				$sql$
			</isNotEmpty>
		</dynamic>
		
	    <dynamic prepend="">
			<isNotEmpty prepend="" property="where">
				$where$
			</isNotEmpty>
		</dynamic>
	   
   </select>
  
  <select id="findSystemrole" parameterClass="long" resultClass="Systemrole">
    select 
    	ID as id,
	  			C_NAME as name,
	  			C_CREATEUSER as createuser,
	  			C_CREATETIME as createtime,
	  			C_MODIFYUSER as modifyuser,
	  			C_MODIFYTIME as modifytime,
	  			C_CUSTOMERAGENTID as customeragentid,
	  			C_TYPE as type,
	  			C_BUSSINESSID as bussinessid,
	  			C_CODE as code 
     from T_SYSTEMROLE
    where ID = #id#
  </select>
   
  <insert id="createSystemrole" parameterClass="Systemrole">
    insert into T_SYSTEMROLE ( 
    	ID,
	  			C_NAME,
	  			C_CREATEUSER,
	  			C_CREATETIME,
	  			C_MODIFYUSER,
	  			C_MODIFYTIME,
	  			C_CUSTOMERAGENTID,
	  			C_TYPE,
	  			C_BUSSINESSID,
	  			C_CODE 
    )
    values (
    	
	  						#id#,
	  					
	  						#name#,
	  					
	  						#createuser#,
	  					
	  						#createtime#,
	  					
	  						#modifyuser#,
	  					
	  						#modifytime#,
	  					
							#customeragentid:DECIMAL#,
						
							#type:DECIMAL#,
							#bussinessid#,
						
	  						#code#
	  					 
    
    )
  </insert>
  
  <delete id="deleteSystemrole" parameterClass="long">
    delete from T_SYSTEMROLE
    where ID = #id#
  </delete>
	
  <update id="updateSystemrole" parameterClass="Systemrole">
    update T_SYSTEMROLE 
    set 
    	C_NAME = #name#,
	  					C_CREATEUSER = #createuser#,
	  					C_CREATETIME = #createtime#,
	  					C_MODIFYUSER = #modifyuser#,
	  					C_MODIFYTIME = #modifytime#,
	  					C_CUSTOMERAGENTID = #customeragentid:DECIMAL#,
						C_TYPE = #type:DECIMAL#,
	  					C_BUSSINESSID = #bussinessid#,
						C_CODE = #code#
	  					 
    
    where ID = #id#
  </update>
  
 
</sqlMap>
 
 
