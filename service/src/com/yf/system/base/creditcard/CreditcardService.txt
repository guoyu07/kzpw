	
  
  
   //粘贴到Service接口类
 	/**
	 * 创建 信用卡记录表
	 * @param id
	 * @return deleted count 
	 */
	public Creditcard createCreditcard(Creditcard creditcard) throws SQLException;
	
	/**
	 * 删除 信用卡记录表
	 * @param id
	 * @return deleted count 
	 */
	public int deleteCreditcard(long id);
	
	
	/**
	 * 修改 信用卡记录表
	 * @param id
	 * @return updated count 
	 */
	public int updateCreditcard(Creditcard creditcard);

		
	/**
	 * 修改 信用卡记录表但忽略空值 
	 * @param id
	 * @return 
	 */
	public int updateCreditcardIgnoreNull(Creditcard creditcard);
		
	
	/**
	 * 查找 信用卡记录表
	 * @param where
	 * @param orderby
	 * @param limit
	 * @param offset
	 * @return
	 */
	public List findAllCreditcard(String where, String orderby,int limit,int offset);
		
	
	/**
	 * 查找 信用卡记录表
	 * @param id
	 * @return
	 */
	public Creditcard findCreditcard(long id);
	
	
	/** 
	 * 查找 信用卡记录表
	 * @param where
	 * @param orderby
	 * @param pageinfo
	 * @return
	 */
	public List findAllCreditcardForPageinfo(String where, String orderby,PageInfo pageinfo);
		
	/** 
	 * 根据Sql查找信用卡记录表
	 * @param sql
	 * @param limit
	 * @param offset
	 * @return
	 */
	public List findAllCreditcardBySql(String sql,int limit,int offset);
	
	
	/**
	 * 执行Sql 信用卡记录表
	 * @param sql 
	 * @return updated count 
	 */
	public int excuteCreditcardBySql(String sql);
	
	/**
	 * 执行Sql 
	 * @param sql 
	 * @return  count 
	 */
	public int countCreditcardBySql(String sql);
	
	
	//------------------------------------------------------------------------
	//粘贴到Service实现类
	
	private ICreditcardComponent creditcardComponent;
	  
 	
 	public ICreditcardComponent getCreditcardComponent() {
		return creditcardComponent;
	}
	public void setCreditcardComponent(ICreditcardComponent  creditcardComponent) {
		this.creditcardComponent = creditcardComponent;
	}
	/**
	 * 创建 信用卡记录表
	 * @param id
	 * @return deleted count 
	 */
	public Creditcard createCreditcard(Creditcard creditcard) throws SQLException{
	
		return creditcardComponent.createCreditcard(creditcard);
	}
	/**
	 * 删除 信用卡记录表
	 * @param id
	 * @return deleted count 
	 */
	public int deleteCreditcard(long id){
	
		return creditcardComponent.deleteCreditcard(id);
	}
	
	
	/**
	 * 修改 信用卡记录表
	 * @param id
	 * @return updated count 
	 */
	public int updateCreditcard(Creditcard creditcard){
		return creditcardComponent.updateCreditcard(creditcard);
	
	}

		
	/**
	 * 修改 信用卡记录表但忽略空值 
	 * @param id
	 * @return 
	 */
	public int updateCreditcardIgnoreNull(Creditcard creditcard){
			return creditcardComponent.updateCreditcardIgnoreNull(creditcard);
	
	}
	
	/**
	 * 查找 信用卡记录表
	 * @param where
	 * @param orderby
	 * @param limit
	 * @param offset
	 * @return
	 */
	public List findAllCreditcard(String where, String orderby,int limit,int offset){
		return creditcardComponent.findAllCreditcard(where, orderby,limit,offset);
	}
		
	
	/**
	 * 查找 信用卡记录表
	 * @param id
	 * @return
	 */
	public Creditcard findCreditcard(long id){
		return creditcardComponent.findCreditcard(id);
	}
	
	/** 
	 * 查找 信用卡记录表
	 * @param where
	 * @param orderby
	 * @param pageinfo
	 * @return
	 */
	public List findAllCreditcardForPageinfo(String where, String orderby,PageInfo pageinfo){
		return creditcardComponent.findAllCreditcard(where, orderby,pageinfo);
	}
		
	/** 
	 * 根据Sql查找信用卡记录表
	 * @param sql
	 * @param limit
	 * @param offset
	 * @return
	 */
	public List findAllCreditcardBySql(String sql,int limit,int offset){
		return creditcardComponent.findAllCreditcard(sql,limit,offset);
	}
	
	
	/**
	 * 执行Sql 信用卡记录表
	 * @param sql 
	 * @return updated count 
	 */
	public int excuteCreditcardBySql(String sql){
		return creditcardComponent.excuteCreditcardBySql(sql);
	}
	
	/**
	 * 执行Sql 
	 * @param sql 
	 * @return  count 
	 */
	public int countCreditcardBySql(String sql){
		return creditcardComponent.countCreditcardBySql(sql);
	}
	
	

