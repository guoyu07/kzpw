	
  
  
   //粘贴到Service接口类
 	/**
	 * 创建 机票类型
	 * @param id
	 * @return deleted count 
	 */
	public Tickettype createTickettype(Tickettype tickettype) throws SQLException;
	
	/**
	 * 删除 机票类型
	 * @param id
	 * @return deleted count 
	 */
	public int deleteTickettype(long id);
	
	
	/**
	 * 修改 机票类型
	 * @param id
	 * @return updated count 
	 */
	public int updateTickettype(Tickettype tickettype);

		
	/**
	 * 修改 机票类型但忽略空值 
	 * @param id
	 * @return 
	 */
	public int updateTickettypeIgnoreNull(Tickettype tickettype);
		
	
	/**
	 * 查找 机票类型
	 * @param where
	 * @param orderby
	 * @param limit
	 * @param offset
	 * @return
	 */
	public List findAllTickettype(String where, String orderby,int limit,int offset);
		
	
	/**
	 * 查找 机票类型
	 * @param id
	 * @return
	 */
	public Tickettype findTickettype(long id);
	
	
	/** 
	 * 查找 机票类型
	 * @param where
	 * @param orderby
	 * @param pageinfo
	 * @return
	 */
	public List findAllTickettypeForPageinfo(String where, String orderby,PageInfo pageinfo);
		
	/** 
	 * 根据Sql查找机票类型
	 * @param sql
	 * @param limit
	 * @param offset
	 * @return
	 */
	public List findAllTickettypeBySql(String sql,int limit,int offset);
	
	
	/**
	 * 执行Sql 机票类型
	 * @param sql 
	 * @return updated count 
	 */
	public int excuteTickettypeBySql(String sql);
	
	/**
	 * 执行Sql 
	 * @param sql 
	 * @return  count 
	 */
	public int countTickettypeBySql(String sql);
	
	
	//------------------------------------------------------------------------
	//粘贴到Service实现类
	
	private ITickettypeComponent tickettypeComponent;
	  
 	
 	public ITickettypeComponent getTickettypeComponent() {
		return tickettypeComponent;
	}
	public void setTickettypeComponent(ITickettypeComponent  tickettypeComponent) {
		this.tickettypeComponent = tickettypeComponent;
	}
	/**
	 * 创建 机票类型
	 * @param id
	 * @return deleted count 
	 */
	public Tickettype createTickettype(Tickettype tickettype) throws SQLException{
	
		return tickettypeComponent.createTickettype(tickettype);
	}
	/**
	 * 删除 机票类型
	 * @param id
	 * @return deleted count 
	 */
	public int deleteTickettype(long id){
	
		return tickettypeComponent.deleteTickettype(id);
	}
	
	
	/**
	 * 修改 机票类型
	 * @param id
	 * @return updated count 
	 */
	public int updateTickettype(Tickettype tickettype){
		return tickettypeComponent.updateTickettype(tickettype);
	
	}

		
	/**
	 * 修改 机票类型但忽略空值 
	 * @param id
	 * @return 
	 */
	public int updateTickettypeIgnoreNull(Tickettype tickettype){
			return tickettypeComponent.updateTickettypeIgnoreNull(tickettype);
	
	}
	
	/**
	 * 查找 机票类型
	 * @param where
	 * @param orderby
	 * @param limit
	 * @param offset
	 * @return
	 */
	public List findAllTickettype(String where, String orderby,int limit,int offset){
		return tickettypeComponent.findAllTickettype(where, orderby,limit,offset);
	}
		
	
	/**
	 * 查找 机票类型
	 * @param id
	 * @return
	 */
	public Tickettype findTickettype(long id){
		return tickettypeComponent.findTickettype(id);
	}
	
	/** 
	 * 查找 机票类型
	 * @param where
	 * @param orderby
	 * @param pageinfo
	 * @return
	 */
	public List findAllTickettypeForPageinfo(String where, String orderby,PageInfo pageinfo){
		return tickettypeComponent.findAllTickettype(where, orderby,pageinfo);
	}
		
	/** 
	 * 根据Sql查找机票类型
	 * @param sql
	 * @param limit
	 * @param offset
	 * @return
	 */
	public List findAllTickettypeBySql(String sql,int limit,int offset){
		return tickettypeComponent.findAllTickettype(sql,limit,offset);
	}
	
	
	/**
	 * 执行Sql 机票类型
	 * @param sql 
	 * @return updated count 
	 */
	public int excuteTickettypeBySql(String sql){
		return tickettypeComponent.excuteTickettypeBySql(sql);
	}
	
	/**
	 * 执行Sql 
	 * @param sql 
	 * @return  count 
	 */
	public int countTickettypeBySql(String sql){
		return tickettypeComponent.countTickettypeBySql(sql);
	}
	
	

