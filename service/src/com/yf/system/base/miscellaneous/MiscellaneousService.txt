	
  
  
   //粘贴到Service接口类
 	/**
	 * 创建 客户经理杂项列表
	 * @param id
	 * @return deleted count 
	 */
	public Miscellaneous createMiscellaneous(Miscellaneous miscellaneous) throws SQLException;
	
	/**
	 * 删除 客户经理杂项列表
	 * @param id
	 * @return deleted count 
	 */
	public int deleteMiscellaneous(long id);
	
	
	/**
	 * 修改 客户经理杂项列表
	 * @param id
	 * @return updated count 
	 */
	public int updateMiscellaneous(Miscellaneous miscellaneous);

		
	/**
	 * 修改 客户经理杂项列表但忽略空值 
	 * @param id
	 * @return 
	 */
	public int updateMiscellaneousIgnoreNull(Miscellaneous miscellaneous);
		
	
	/**
	 * 查找 客户经理杂项列表
	 * @param where
	 * @param orderby
	 * @param limit
	 * @param offset
	 * @return
	 */
	public List findAllMiscellaneous(String where, String orderby,int limit,int offset);
		
	
	/**
	 * 查找 客户经理杂项列表
	 * @param id
	 * @return
	 */
	public Miscellaneous findMiscellaneous(long id);
	
	
	/** 
	 * 查找 客户经理杂项列表
	 * @param where
	 * @param orderby
	 * @param pageinfo
	 * @return
	 */
	public List findAllMiscellaneousForPageinfo(String where, String orderby,PageInfo pageinfo);
		
	/** 
	 * 根据Sql查找客户经理杂项列表
	 * @param sql
	 * @param limit
	 * @param offset
	 * @return
	 */
	public List findAllMiscellaneousBySql(String sql,int limit,int offset);
	
	
	/**
	 * 执行Sql 客户经理杂项列表
	 * @param sql 
	 * @return updated count 
	 */
	public int excuteMiscellaneousBySql(String sql);
	
	/**
	 * 执行Sql 
	 * @param sql 
	 * @return  count 
	 */
	public int countMiscellaneousBySql(String sql);
	
	
	//------------------------------------------------------------------------
	//粘贴到Service实现类
	
	private IMiscellaneousComponent miscellaneousComponent;
	  
 	
 	public IMiscellaneousComponent getMiscellaneousComponent() {
		return miscellaneousComponent;
	}
	public void setMiscellaneousComponent(IMiscellaneousComponent  miscellaneousComponent) {
		this.miscellaneousComponent = miscellaneousComponent;
	}
	/**
	 * 创建 客户经理杂项列表
	 * @param id
	 * @return deleted count 
	 */
	public Miscellaneous createMiscellaneous(Miscellaneous miscellaneous) throws SQLException{
	
		return miscellaneousComponent.createMiscellaneous(miscellaneous);
	}
	/**
	 * 删除 客户经理杂项列表
	 * @param id
	 * @return deleted count 
	 */
	public int deleteMiscellaneous(long id){
	
		return miscellaneousComponent.deleteMiscellaneous(id);
	}
	
	
	/**
	 * 修改 客户经理杂项列表
	 * @param id
	 * @return updated count 
	 */
	public int updateMiscellaneous(Miscellaneous miscellaneous){
		return miscellaneousComponent.updateMiscellaneous(miscellaneous);
	
	}

		
	/**
	 * 修改 客户经理杂项列表但忽略空值 
	 * @param id
	 * @return 
	 */
	public int updateMiscellaneousIgnoreNull(Miscellaneous miscellaneous){
			return miscellaneousComponent.updateMiscellaneousIgnoreNull(miscellaneous);
	
	}
	
	/**
	 * 查找 客户经理杂项列表
	 * @param where
	 * @param orderby
	 * @param limit
	 * @param offset
	 * @return
	 */
	public List findAllMiscellaneous(String where, String orderby,int limit,int offset){
		return miscellaneousComponent.findAllMiscellaneous(where, orderby,limit,offset);
	}
		
	
	/**
	 * 查找 客户经理杂项列表
	 * @param id
	 * @return
	 */
	public Miscellaneous findMiscellaneous(long id){
		return miscellaneousComponent.findMiscellaneous(id);
	}
	
	/** 
	 * 查找 客户经理杂项列表
	 * @param where
	 * @param orderby
	 * @param pageinfo
	 * @return
	 */
	public List findAllMiscellaneousForPageinfo(String where, String orderby,PageInfo pageinfo){
		return miscellaneousComponent.findAllMiscellaneous(where, orderby,pageinfo);
	}
		
	/** 
	 * 根据Sql查找客户经理杂项列表
	 * @param sql
	 * @param limit
	 * @param offset
	 * @return
	 */
	public List findAllMiscellaneousBySql(String sql,int limit,int offset){
		return miscellaneousComponent.findAllMiscellaneous(sql,limit,offset);
	}
	
	
	/**
	 * 执行Sql 客户经理杂项列表
	 * @param sql 
	 * @return updated count 
	 */
	public int excuteMiscellaneousBySql(String sql){
		return miscellaneousComponent.excuteMiscellaneousBySql(sql);
	}
	
	/**
	 * 执行Sql 
	 * @param sql 
	 * @return  count 
	 */
	public int countMiscellaneousBySql(String sql){
		return miscellaneousComponent.countMiscellaneousBySql(sql);
	}
	
	

