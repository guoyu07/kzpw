	
  
  
   //粘贴到Service接口类
 	/**
	 * 创建 万里行申请表
	 * @param id
	 * @return deleted count 
	 */
	public Wanlixing createWanlixing(Wanlixing wanlixing) throws SQLException;
	
	/**
	 * 删除 万里行申请表
	 * @param id
	 * @return deleted count 
	 */
	public int deleteWanlixing(long id);
	
	
	/**
	 * 修改 万里行申请表
	 * @param id
	 * @return updated count 
	 */
	public int updateWanlixing(Wanlixing wanlixing);

		
	/**
	 * 修改 万里行申请表但忽略空值 
	 * @param id
	 * @return 
	 */
	public int updateWanlixingIgnoreNull(Wanlixing wanlixing);
		
	
	/**
	 * 查找 万里行申请表
	 * @param where
	 * @param orderby
	 * @param limit
	 * @param offset
	 * @return
	 */
	public List findAllWanlixing(String where, String orderby,int limit,int offset);
		
	
	/**
	 * 查找 万里行申请表
	 * @param id
	 * @return
	 */
	public Wanlixing findWanlixing(long id);
	
	
	/** 
	 * 查找 万里行申请表
	 * @param where
	 * @param orderby
	 * @param pageinfo
	 * @return
	 */
	public List findAllWanlixingForPageinfo(String where, String orderby,PageInfo pageinfo);
		
	/** 
	 * 根据Sql查找万里行申请表
	 * @param sql
	 * @param limit
	 * @param offset
	 * @return
	 */
	public List findAllWanlixingBySql(String sql,int limit,int offset);
	
	
	/**
	 * 执行Sql 万里行申请表
	 * @param sql 
	 * @return updated count 
	 */
	public int excuteWanlixingBySql(String sql);
	
	/**
	 * 执行Sql 
	 * @param sql 
	 * @return  count 
	 */
	public int countWanlixingBySql(String sql);
	
	
	//------------------------------------------------------------------------
	//粘贴到Service实现类
	
	private IWanlixingComponent wanlixingComponent;
	  
 	
 	public IWanlixingComponent getWanlixingComponent() {
		return wanlixingComponent;
	}
	public void setWanlixingComponent(IWanlixingComponent  wanlixingComponent) {
		this.wanlixingComponent = wanlixingComponent;
	}
	/**
	 * 创建 万里行申请表
	 * @param id
	 * @return deleted count 
	 */
	public Wanlixing createWanlixing(Wanlixing wanlixing) throws SQLException{
	
		return wanlixingComponent.createWanlixing(wanlixing);
	}
	/**
	 * 删除 万里行申请表
	 * @param id
	 * @return deleted count 
	 */
	public int deleteWanlixing(long id){
	
		return wanlixingComponent.deleteWanlixing(id);
	}
	
	
	/**
	 * 修改 万里行申请表
	 * @param id
	 * @return updated count 
	 */
	public int updateWanlixing(Wanlixing wanlixing){
		return wanlixingComponent.updateWanlixing(wanlixing);
	
	}

		
	/**
	 * 修改 万里行申请表但忽略空值 
	 * @param id
	 * @return 
	 */
	public int updateWanlixingIgnoreNull(Wanlixing wanlixing){
			return wanlixingComponent.updateWanlixingIgnoreNull(wanlixing);
	
	}
	
	/**
	 * 查找 万里行申请表
	 * @param where
	 * @param orderby
	 * @param limit
	 * @param offset
	 * @return
	 */
	public List findAllWanlixing(String where, String orderby,int limit,int offset){
		return wanlixingComponent.findAllWanlixing(where, orderby,limit,offset);
	}
		
	
	/**
	 * 查找 万里行申请表
	 * @param id
	 * @return
	 */
	public Wanlixing findWanlixing(long id){
		return wanlixingComponent.findWanlixing(id);
	}
	
	/** 
	 * 查找 万里行申请表
	 * @param where
	 * @param orderby
	 * @param pageinfo
	 * @return
	 */
	public List findAllWanlixingForPageinfo(String where, String orderby,PageInfo pageinfo){
		return wanlixingComponent.findAllWanlixing(where, orderby,pageinfo);
	}
		
	/** 
	 * 根据Sql查找万里行申请表
	 * @param sql
	 * @param limit
	 * @param offset
	 * @return
	 */
	public List findAllWanlixingBySql(String sql,int limit,int offset){
		return wanlixingComponent.findAllWanlixing(sql,limit,offset);
	}
	
	
	/**
	 * 执行Sql 万里行申请表
	 * @param sql 
	 * @return updated count 
	 */
	public int excuteWanlixingBySql(String sql){
		return wanlixingComponent.excuteWanlixingBySql(sql);
	}
	
	/**
	 * 执行Sql 
	 * @param sql 
	 * @return  count 
	 */
	public int countWanlixingBySql(String sql){
		return wanlixingComponent.countWanlixingBySql(sql);
	}
	
	

