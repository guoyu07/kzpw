	
  
  
   //粘贴到Service接口类
 	/**
	 * 创建 返佣规则
	 * @param id
	 * @return deleted count 
	 */
	public Rebaterule createRebaterule(Rebaterule rebaterule) throws SQLException;
	
	/**
	 * 删除 返佣规则
	 * @param id
	 * @return deleted count 
	 */
	public int deleteRebaterule(long id);
	
	
	/**
	 * 修改 返佣规则
	 * @param id
	 * @return updated count 
	 */
	public int updateRebaterule(Rebaterule rebaterule);

		
	/**
	 * 修改 返佣规则但忽略空值 
	 * @param id
	 * @return 
	 */
	public int updateRebateruleIgnoreNull(Rebaterule rebaterule);
		
	
	/**
	 * 查找 返佣规则
	 * @param where
	 * @param orderby
	 * @param limit
	 * @param offset
	 * @return
	 */
	public List findAllRebaterule(String where, String orderby,int limit,int offset);
		
	
	/**
	 * 查找 返佣规则
	 * @param id
	 * @return
	 */
	public Rebaterule findRebaterule(long id);
	
	
	/** 
	 * 查找 返佣规则
	 * @param where
	 * @param orderby
	 * @param pageinfo
	 * @return
	 */
	public List findAllRebateruleForPageinfo(String where, String orderby,PageInfo pageinfo);
		
	/** 
	 * 根据Sql查找返佣规则
	 * @param sql
	 * @param limit
	 * @param offset
	 * @return
	 */
	public List findAllRebateruleBySql(String sql,int limit,int offset);
	
	
	/**
	 * 执行Sql 返佣规则
	 * @param sql 
	 * @return updated count 
	 */
	public int excuteRebateruleBySql(String sql);
	
	/**
	 * 执行Sql 
	 * @param sql 
	 * @return  count 
	 */
	public int countRebateruleBySql(String sql);
	
	
	//------------------------------------------------------------------------
	//粘贴到Service实现类
	
	private IRebateruleComponent rebateruleComponent;
	  
 	
 	public IRebateruleComponent getRebateruleComponent() {
		return rebateruleComponent;
	}
	public void setRebateruleComponent(IRebateruleComponent  rebateruleComponent) {
		this.rebateruleComponent = rebateruleComponent;
	}
	/**
	 * 创建 返佣规则
	 * @param id
	 * @return deleted count 
	 */
	public Rebaterule createRebaterule(Rebaterule rebaterule) throws SQLException{
	
		return rebateruleComponent.createRebaterule(rebaterule);
	}
	/**
	 * 删除 返佣规则
	 * @param id
	 * @return deleted count 
	 */
	public int deleteRebaterule(long id){
	
		return rebateruleComponent.deleteRebaterule(id);
	}
	
	
	/**
	 * 修改 返佣规则
	 * @param id
	 * @return updated count 
	 */
	public int updateRebaterule(Rebaterule rebaterule){
		return rebateruleComponent.updateRebaterule(rebaterule);
	
	}

		
	/**
	 * 修改 返佣规则但忽略空值 
	 * @param id
	 * @return 
	 */
	public int updateRebateruleIgnoreNull(Rebaterule rebaterule){
			return rebateruleComponent.updateRebateruleIgnoreNull(rebaterule);
	
	}
	
	/**
	 * 查找 返佣规则
	 * @param where
	 * @param orderby
	 * @param limit
	 * @param offset
	 * @return
	 */
	public List findAllRebaterule(String where, String orderby,int limit,int offset){
		return rebateruleComponent.findAllRebaterule(where, orderby,limit,offset);
	}
		
	
	/**
	 * 查找 返佣规则
	 * @param id
	 * @return
	 */
	public Rebaterule findRebaterule(long id){
		return rebateruleComponent.findRebaterule(id);
	}
	
	/** 
	 * 查找 返佣规则
	 * @param where
	 * @param orderby
	 * @param pageinfo
	 * @return
	 */
	public List findAllRebateruleForPageinfo(String where, String orderby,PageInfo pageinfo){
		return rebateruleComponent.findAllRebaterule(where, orderby,pageinfo);
	}
		
	/** 
	 * 根据Sql查找返佣规则
	 * @param sql
	 * @param limit
	 * @param offset
	 * @return
	 */
	public List findAllRebateruleBySql(String sql,int limit,int offset){
		return rebateruleComponent.findAllRebaterule(sql,limit,offset);
	}
	
	
	/**
	 * 执行Sql 返佣规则
	 * @param sql 
	 * @return updated count 
	 */
	public int excuteRebateruleBySql(String sql){
		return rebateruleComponent.excuteRebateruleBySql(sql);
	}
	
	/**
	 * 执行Sql 
	 * @param sql 
	 * @return  count 
	 */
	public int countRebateruleBySql(String sql){
		return rebateruleComponent.countRebateruleBySql(sql);
	}
	
	

