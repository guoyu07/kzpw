	
  
  
   //粘贴到Service接口类
 	/**
	 * 创建 火车票价
	 * @param id
	 * @return deleted count 
	 */
	public Trainfare createTrainfare(Trainfare trainfare) throws SQLException;
	
	/**
	 * 删除 火车票价
	 * @param id
	 * @return deleted count 
	 */
	public int deleteTrainfare(long id);
	
	
	/**
	 * 修改 火车票价
	 * @param id
	 * @return updated count 
	 */
	public int updateTrainfare(Trainfare trainfare);

		
	/**
	 * 修改 火车票价但忽略空值 
	 * @param id
	 * @return 
	 */
	public int updateTrainfareIgnoreNull(Trainfare trainfare);
		
	
	/**
	 * 查找 火车票价
	 * @param where
	 * @param orderby
	 * @param limit
	 * @param offset
	 * @return
	 */
	public List findAllTrainfare(String where, String orderby,int limit,int offset);
		
	
	/**
	 * 查找 火车票价
	 * @param id
	 * @return
	 */
	public Trainfare findTrainfare(long id);
	
	
	/** 
	 * 查找 火车票价
	 * @param where
	 * @param orderby
	 * @param pageinfo
	 * @return
	 */
	public List findAllTrainfareForPageinfo(String where, String orderby,PageInfo pageinfo);
		
	/** 
	 * 根据Sql查找火车票价
	 * @param sql
	 * @param limit
	 * @param offset
	 * @return
	 */
	public List findAllTrainfareBySql(String sql,int limit,int offset);
	
	
	/**
	 * 执行Sql 火车票价
	 * @param sql 
	 * @return updated count 
	 */
	public int excuteTrainfareBySql(String sql);
	
	/**
	 * 执行Sql 
	 * @param sql 
	 * @return  count 
	 */
	public int countTrainfareBySql(String sql);
	
	
	//------------------------------------------------------------------------
	//粘贴到Service实现类
	
	private ITrainfareComponent trainfareComponent;
	  
 	
 	public ITrainfareComponent getTrainfareComponent() {
		return trainfareComponent;
	}
	public void setTrainfareComponent(ITrainfareComponent  trainfareComponent) {
		this.trainfareComponent = trainfareComponent;
	}
	/**
	 * 创建 火车票价
	 * @param id
	 * @return deleted count 
	 */
	public Trainfare createTrainfare(Trainfare trainfare) throws SQLException{
	
		return trainfareComponent.createTrainfare(trainfare);
	}
	/**
	 * 删除 火车票价
	 * @param id
	 * @return deleted count 
	 */
	public int deleteTrainfare(long id){
	
		return trainfareComponent.deleteTrainfare(id);
	}
	
	
	/**
	 * 修改 火车票价
	 * @param id
	 * @return updated count 
	 */
	public int updateTrainfare(Trainfare trainfare){
		return trainfareComponent.updateTrainfare(trainfare);
	
	}

		
	/**
	 * 修改 火车票价但忽略空值 
	 * @param id
	 * @return 
	 */
	public int updateTrainfareIgnoreNull(Trainfare trainfare){
			return trainfareComponent.updateTrainfareIgnoreNull(trainfare);
	
	}
	
	/**
	 * 查找 火车票价
	 * @param where
	 * @param orderby
	 * @param limit
	 * @param offset
	 * @return
	 */
	public List findAllTrainfare(String where, String orderby,int limit,int offset){
		return trainfareComponent.findAllTrainfare(where, orderby,limit,offset);
	}
		
	
	/**
	 * 查找 火车票价
	 * @param id
	 * @return
	 */
	public Trainfare findTrainfare(long id){
		return trainfareComponent.findTrainfare(id);
	}
	
	/** 
	 * 查找 火车票价
	 * @param where
	 * @param orderby
	 * @param pageinfo
	 * @return
	 */
	public List findAllTrainfareForPageinfo(String where, String orderby,PageInfo pageinfo){
		return trainfareComponent.findAllTrainfare(where, orderby,pageinfo);
	}
		
	/** 
	 * 根据Sql查找火车票价
	 * @param sql
	 * @param limit
	 * @param offset
	 * @return
	 */
	public List findAllTrainfareBySql(String sql,int limit,int offset){
		return trainfareComponent.findAllTrainfare(sql,limit,offset);
	}
	
	
	/**
	 * 执行Sql 火车票价
	 * @param sql 
	 * @return updated count 
	 */
	public int excuteTrainfareBySql(String sql){
		return trainfareComponent.excuteTrainfareBySql(sql);
	}
	
	/**
	 * 执行Sql 
	 * @param sql 
	 * @return  count 
	 */
	public int countTrainfareBySql(String sql){
		return trainfareComponent.countTrainfareBySql(sql);
	}
	
	

