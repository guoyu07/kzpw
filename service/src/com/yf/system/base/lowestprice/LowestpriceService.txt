	
  
  
   //粘贴到Service接口类
 	/**
	 * 创建 机票低价数据表
	 * @param id
	 * @return deleted count 
	 */
	public Lowestprice createLowestprice(Lowestprice lowestprice) throws SQLException;
	
	/**
	 * 删除 机票低价数据表
	 * @param id
	 * @return deleted count 
	 */
	public int deleteLowestprice(long id);
	
	
	/**
	 * 修改 机票低价数据表
	 * @param id
	 * @return updated count 
	 */
	public int updateLowestprice(Lowestprice lowestprice);

		
	/**
	 * 修改 机票低价数据表但忽略空值 
	 * @param id
	 * @return 
	 */
	public int updateLowestpriceIgnoreNull(Lowestprice lowestprice);
		
	
	/**
	 * 查找 机票低价数据表
	 * @param where
	 * @param orderby
	 * @param limit
	 * @param offset
	 * @return
	 */
	public List findAllLowestprice(String where, String orderby,int limit,int offset);
		
	
	/**
	 * 查找 机票低价数据表
	 * @param id
	 * @return
	 */
	public Lowestprice findLowestprice(long id);
	
	
	/** 
	 * 查找 机票低价数据表
	 * @param where
	 * @param orderby
	 * @param pageinfo
	 * @return
	 */
	public List findAllLowestpriceForPageinfo(String where, String orderby,PageInfo pageinfo);
		
	/** 
	 * 根据Sql查找机票低价数据表
	 * @param sql
	 * @param limit
	 * @param offset
	 * @return
	 */
	public List findAllLowestpriceBySql(String sql,int limit,int offset);
	
	
	/**
	 * 执行Sql 机票低价数据表
	 * @param sql 
	 * @return updated count 
	 */
	public int excuteLowestpriceBySql(String sql);
	
	/**
	 * 执行Sql 
	 * @param sql 
	 * @return  count 
	 */
	public int countLowestpriceBySql(String sql);
	
	
	//------------------------------------------------------------------------
	//粘贴到Service实现类
	
	private ILowestpriceComponent lowestpriceComponent;
	  
 	
 	public ILowestpriceComponent getLowestpriceComponent() {
		return lowestpriceComponent;
	}
	public void setLowestpriceComponent(ILowestpriceComponent  lowestpriceComponent) {
		this.lowestpriceComponent = lowestpriceComponent;
	}
	/**
	 * 创建 机票低价数据表
	 * @param id
	 * @return deleted count 
	 */
	public Lowestprice createLowestprice(Lowestprice lowestprice) throws SQLException{
	
		return lowestpriceComponent.createLowestprice(lowestprice);
	}
	/**
	 * 删除 机票低价数据表
	 * @param id
	 * @return deleted count 
	 */
	public int deleteLowestprice(long id){
	
		return lowestpriceComponent.deleteLowestprice(id);
	}
	
	
	/**
	 * 修改 机票低价数据表
	 * @param id
	 * @return updated count 
	 */
	public int updateLowestprice(Lowestprice lowestprice){
		return lowestpriceComponent.updateLowestprice(lowestprice);
	
	}

		
	/**
	 * 修改 机票低价数据表但忽略空值 
	 * @param id
	 * @return 
	 */
	public int updateLowestpriceIgnoreNull(Lowestprice lowestprice){
			return lowestpriceComponent.updateLowestpriceIgnoreNull(lowestprice);
	
	}
	
	/**
	 * 查找 机票低价数据表
	 * @param where
	 * @param orderby
	 * @param limit
	 * @param offset
	 * @return
	 */
	public List findAllLowestprice(String where, String orderby,int limit,int offset){
		return lowestpriceComponent.findAllLowestprice(where, orderby,limit,offset);
	}
		
	
	/**
	 * 查找 机票低价数据表
	 * @param id
	 * @return
	 */
	public Lowestprice findLowestprice(long id){
		return lowestpriceComponent.findLowestprice(id);
	}
	
	/** 
	 * 查找 机票低价数据表
	 * @param where
	 * @param orderby
	 * @param pageinfo
	 * @return
	 */
	public List findAllLowestpriceForPageinfo(String where, String orderby,PageInfo pageinfo){
		return lowestpriceComponent.findAllLowestprice(where, orderby,pageinfo);
	}
		
	/** 
	 * 根据Sql查找机票低价数据表
	 * @param sql
	 * @param limit
	 * @param offset
	 * @return
	 */
	public List findAllLowestpriceBySql(String sql,int limit,int offset){
		return lowestpriceComponent.findAllLowestprice(sql,limit,offset);
	}
	
	
	/**
	 * 执行Sql 机票低价数据表
	 * @param sql 
	 * @return updated count 
	 */
	public int excuteLowestpriceBySql(String sql){
		return lowestpriceComponent.excuteLowestpriceBySql(sql);
	}
	
	/**
	 * 执行Sql 
	 * @param sql 
	 * @return  count 
	 */
	public int countLowestpriceBySql(String sql){
		return lowestpriceComponent.countLowestpriceBySql(sql);
	}
	
	

