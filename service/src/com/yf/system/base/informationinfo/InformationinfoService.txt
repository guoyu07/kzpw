	
  
  
   //粘贴到Service接口类
 	/**
	 * 创建 资讯中心详细信息
	 * @param id
	 * @return deleted count 
	 */
	public Informationinfo createInformationinfo(Informationinfo informationinfo) throws SQLException;
	
	/**
	 * 删除 资讯中心详细信息
	 * @param id
	 * @return deleted count 
	 */
	public int deleteInformationinfo(long id);
	
	
	/**
	 * 修改 资讯中心详细信息
	 * @param id
	 * @return updated count 
	 */
	public int updateInformationinfo(Informationinfo informationinfo);

		
	/**
	 * 修改 资讯中心详细信息但忽略空值 
	 * @param id
	 * @return 
	 */
	public int updateInformationinfoIgnoreNull(Informationinfo informationinfo);
		
	
	/**
	 * 查找 资讯中心详细信息
	 * @param where
	 * @param orderby
	 * @param limit
	 * @param offset
	 * @return
	 */
	public List findAllInformationinfo(String where, String orderby,int limit,int offset);
		
	
	/**
	 * 查找 资讯中心详细信息
	 * @param id
	 * @return
	 */
	public Informationinfo findInformationinfo(long id);
	
	
	/** 
	 * 查找 资讯中心详细信息
	 * @param where
	 * @param orderby
	 * @param pageinfo
	 * @return
	 */
	public List findAllInformationinfoForPageinfo(String where, String orderby,PageInfo pageinfo);
		
	/** 
	 * 根据Sql查找资讯中心详细信息
	 * @param sql
	 * @param limit
	 * @param offset
	 * @return
	 */
	public List findAllInformationinfoBySql(String sql,int limit,int offset);
	
	
	/**
	 * 执行Sql 资讯中心详细信息
	 * @param sql 
	 * @return updated count 
	 */
	public int excuteInformationinfoBySql(String sql);
	
	/**
	 * 执行Sql 
	 * @param sql 
	 * @return  count 
	 */
	public int countInformationinfoBySql(String sql);
	
	
	//------------------------------------------------------------------------
	//粘贴到Service实现类
	
	private IInformationinfoComponent informationinfoComponent;
	  
 	
 	public IInformationinfoComponent getInformationinfoComponent() {
		return informationinfoComponent;
	}
	public void setInformationinfoComponent(IInformationinfoComponent  informationinfoComponent) {
		this.informationinfoComponent = informationinfoComponent;
	}
	/**
	 * 创建 资讯中心详细信息
	 * @param id
	 * @return deleted count 
	 */
	public Informationinfo createInformationinfo(Informationinfo informationinfo) throws SQLException{
	
		return informationinfoComponent.createInformationinfo(informationinfo);
	}
	/**
	 * 删除 资讯中心详细信息
	 * @param id
	 * @return deleted count 
	 */
	public int deleteInformationinfo(long id){
	
		return informationinfoComponent.deleteInformationinfo(id);
	}
	
	
	/**
	 * 修改 资讯中心详细信息
	 * @param id
	 * @return updated count 
	 */
	public int updateInformationinfo(Informationinfo informationinfo){
		return informationinfoComponent.updateInformationinfo(informationinfo);
	
	}

		
	/**
	 * 修改 资讯中心详细信息但忽略空值 
	 * @param id
	 * @return 
	 */
	public int updateInformationinfoIgnoreNull(Informationinfo informationinfo){
			return informationinfoComponent.updateInformationinfoIgnoreNull(informationinfo);
	
	}
	
	/**
	 * 查找 资讯中心详细信息
	 * @param where
	 * @param orderby
	 * @param limit
	 * @param offset
	 * @return
	 */
	public List findAllInformationinfo(String where, String orderby,int limit,int offset){
		return informationinfoComponent.findAllInformationinfo(where, orderby,limit,offset);
	}
		
	
	/**
	 * 查找 资讯中心详细信息
	 * @param id
	 * @return
	 */
	public Informationinfo findInformationinfo(long id){
		return informationinfoComponent.findInformationinfo(id);
	}
	
	/** 
	 * 查找 资讯中心详细信息
	 * @param where
	 * @param orderby
	 * @param pageinfo
	 * @return
	 */
	public List findAllInformationinfoForPageinfo(String where, String orderby,PageInfo pageinfo){
		return informationinfoComponent.findAllInformationinfo(where, orderby,pageinfo);
	}
		
	/** 
	 * 根据Sql查找资讯中心详细信息
	 * @param sql
	 * @param limit
	 * @param offset
	 * @return
	 */
	public List findAllInformationinfoBySql(String sql,int limit,int offset){
		return informationinfoComponent.findAllInformationinfo(sql,limit,offset);
	}
	
	
	/**
	 * 执行Sql 资讯中心详细信息
	 * @param sql 
	 * @return updated count 
	 */
	public int excuteInformationinfoBySql(String sql){
		return informationinfoComponent.excuteInformationinfoBySql(sql);
	}
	
	/**
	 * 执行Sql 
	 * @param sql 
	 * @return  count 
	 */
	public int countInformationinfoBySql(String sql){
		return informationinfoComponent.countInformationinfoBySql(sql);
	}
	
	

